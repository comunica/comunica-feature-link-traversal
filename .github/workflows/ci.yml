name: "CI"
on: [push, pull_request]
jobs:

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version:
          - 14.x
          - 16.x
    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Ensure line endings are consistent
        run: git config --global core.autocrlf input
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Load cache
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-test-modules-v1-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn install --pure-lockfile
      - name: Build project
        run: yarn run build
      - name: Run tests
        run: yarn run test-ci
      - name: Submit coverage results
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.github_token }}
          flag-name: run-${{ matrix.node-version }}
          parallel: true

  coveralls:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Consolidate test coverage from different jobs
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.github_token }}
          parallel-finished: true

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Load cache
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-lint-modules-v1-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn install --pure-lockfile
      - name: Run linter
        run: yarn run lint

  docker:
    needs:
      - test
      - lint
    runs-on: ubuntu-latest
    steps:
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Load cache
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-docker-modules-v1-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn install --pure-lockfile
      - name: Install Lerna Docker
        run: sh -c "`curl -fsSl https://raw.githubusercontent.com/rubensworks/lerna-docker/master/install.sh`"
      - name: Build Docker images
        run: ~/.lerna-docker/bin/lerna-docker comunica build
      - name: Deploy Docker images
        if: startsWith(github.ref, 'refs/heads/master') || startsWith(github.ref, 'refs/tags/')
        run: ~/.lerna-docker/bin/lerna-docker comunica push
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  docs:
    needs:
      - test
      - lint
    runs-on: ubuntu-latest
    steps:
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Load cache
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-docs-modules-v1-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn install --pure-lockfile
      - name: Build docs
        run: yarn run doc
      - name: Deploy TSDoc to GitHub Pages
        if: startsWith(github.ref, 'refs/heads/master')
        uses: JamesIves/github-pages-deploy-action@v4.2.5
        with:
          branch: gh-pages
          folder: documentation
          clean: true

  webclients:
    needs:
      - test
      - lint
    runs-on: ubuntu-latest
    steps:
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Load cache
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-webclients-modules-v1-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn install --pure-lockfile
      - name: Build web clients
        run: ./web-clients/build-web-clients.sh
      - name: Deploy web clients
        if: startsWith(github.ref, 'refs/heads/master')
        run: ./web-clients/deploy-web-clients.sh
        env:
          GH_TOKEN: ${{ secrets.PAT }}
